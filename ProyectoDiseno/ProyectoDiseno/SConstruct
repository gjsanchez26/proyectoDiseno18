
libraries 		= ['libcluster-delegator','libboost_serialization']
library_paths 	        = ['/usr/local/include', '/usr/local/lib', '/opt/local/include', '${MPI_INCLUDE_PATH}', '${Boost_INCLUDE_DIRS}' , '${USER_INCLUDE_PATH}']
cppDefines 		= {}
cppFlags 		= ['-Wall']
cxxFlags 		= ['-std=c++11','-L']

common_env = Environment()
common_env.Replace(CXX                  = 'mpicxx')
common_env.Append( LIBS 	        = libraries)
common_env.Append( LIBPATH 		= library_paths)
common_env.Append( CPPDEFINES 	        = cppDefines)
common_env.Append( CPPFLAGS 		= cppFlags)
common_env.Append( CXXFLAGS 		= cxxFlags)

main = common_env.Program( "main", [ "example2.cpp" ] )

test = common_env.Command( target = "output",
                source = "./main",
                action = ["mpiexec -hostfile host_file ./main 20 is the answer"] )
AlwaysBuild( test )

main0 = common_env.Program( "main0", [ "example1.cpp" ] )

test0 = common_env.Command( target = "output0",
                source = "./main0",
                action = ["mpiexec -hostfile host_file ./main0"] )
AlwaysBuild( test0 )